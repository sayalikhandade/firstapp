[{"C:\\Users\\ADMIN\\firstapp\\src\\index.js":"1","C:\\Users\\ADMIN\\firstapp\\src\\reportWebVitals.js":"2","C:\\Users\\ADMIN\\firstapp\\src\\App.js":"3","C:\\Users\\ADMIN\\firstapp\\src\\Heading.jsx":"4","C:\\Users\\ADMIN\\firstapp\\src\\Parag.jsx":"5","C:\\Users\\ADMIN\\firstapp\\src\\olList.jsx":"6","C:\\Users\\ADMIN\\firstapp\\src\\OlList.jsx":"7","C:\\Users\\ADMIN\\firstapp\\src\\Wish.jsx":"8","C:\\Users\\ADMIN\\firstapp\\src\\IncDec.jsx":"9"},{"size":3632,"mtime":1609169883692,"results":"10","hashOfConfig":"11"},{"size":362,"mtime":499162500000,"results":"12","hashOfConfig":"11"},{"size":4726,"mtime":1609778745085,"results":"13","hashOfConfig":"11"},{"size":115,"mtime":1608876148437,"results":"14","hashOfConfig":"11"},{"size":125,"mtime":1608876383681,"results":"15","hashOfConfig":"11"},{"size":387,"mtime":1608876967046,"results":"16","hashOfConfig":"11"},{"size":387,"mtime":1608876967046,"results":"17","hashOfConfig":"11"},{"size":530,"mtime":1608879572348,"results":"18","hashOfConfig":"11"},{"size":1651,"mtime":1609740028619,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22","usedDeprecatedRules":"23"},"5942kk",{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"23"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"43"},"C:\\Users\\ADMIN\\firstapp\\src\\index.js",["44","45","46","47"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport App, {add, sub, mul, div} from './App';\n\n// ********************we have to create component for last part************************************8\n// const time = new Date().getHours();\n\n// let wish = \"\";\n// let colour = {\n// };\n\n// if (time>=1 && time < 12) {\n//    wish = \"Good morning!!\";\n//    colour.color = \"orange\";\n\n// } \n// else {\n//     if (time>=12 && time < 19) {\n//       wish = \"Good Afternoon !!\";\n//       colour.color = \"brown\";\n        \n//     } else {\n//         wish = \"Good Night !!\";\n//         colour.color = \"blue\"\n//     }\n    \n// }\n// ReactDOM.render(\n//     <React.Fragment><h1>{time}</h1>\n//     <h1>Hello Sir, <span style = {colour}>{wish}</span></h1>\n//     </React.Fragment>\n//     ,\n//     document.getElementById(\"root\")\n// );\n\n\n\n\n// const fname = \"Sayali\";\n// const imag1 = \"https://picsum.photos/250/300\";\n// const imag2 = \"https://picsum.photos/200/300\";\n// const imag3 = \"https://picsum.photos/300/300\";\n// const heading = {\n//         textAlign: \"center\",\n//         textDecoration: \"solid\" ,\n//         color: \"brown\",\n//         fontFamily: \"'Langar', cursive\"\n// };\n// //we can use both template literal and simple. try to use tem lite for getting practice as it is difficult.\n// var date = new Date().toDateString();\n// var time = new Date().toLocaleTimeString();\n// ReactDOM.render(\n// <React.Fragment>\n// <div style={heading}>\n// <h1 className=\"myName\"> My name is {`${fname}`}</h1>\n// <p>Current date is {`${date}`}</p>\n// <p> Current time is {time}</p>\n// <img src={imag1} alt=\"random\"/> \n// <a href=\"https://www.youtube.com/watch?v=tiLWCNFzThE&list=PLwGdqUZWnOp3aROg4wypcRhZqJG3ajZWJ\" target = \"_top\">\n// <img src={imag2} alt=\"random\" /> \n// </a>\n// <img src={imag3} alt=\"random\"/> \n// </div>\n// </React.Fragment>\n//     ,\n//     document.getElementById(\"root\")\n// );\n\n\n//below we are using template literals\n// ReactDOM.render(\n//     <React.Fragment>\n//     <App/>\n//     <h1>{names()}</h1>\n//     </React.Fragment>\n//     ,\n\n//     document.getElementById(\"root\")\n// );\n\n// ReactDOM.render(\n//         <React.Fragment>\n//         <App />\n//         <h1 >Sum =  {add(40,4)}</h1>\n//         <h1>Subtraction =  {sub(40,4)}</h1>\n//         <h1>Multiplication =  {mul(40,4)}</h1>\n//         <h1>Division =  {div(40,3)}</h1>\n//         </React.Fragment>\n//         ,\n    \n//         document.getElementById(\"root\")\n//     );\n\nReactDOM.render(<App/>, document.getElementById(\"root\"))\n\n// let myprog = [\"React\", \"Javascript\",\"HTML\",\"css\"];\n// let [top1,,,top5] = myprog;\n// console.log(myprog.length)\n// console.log (`My favorite language is ${top1} and last language is ${top5}`);\n// ReactDOM.render(\n//     <h1>My name is sayali 😃</h1>\n//     ,document.getElementById(\"root\"))\n// Selena.\n// Big Mouth.\n// The Queen's Gambit.\n// Virgin River.\n// Cocomelon.\n\n\n//it is recommended to use React.fragment always.\n// ReactDOM.render(\n//     <React.Fragment> \n//     <h1> Hello World!!</h1>\n//     <p>I am Sayali khandade</p>\n//     </React.Fragment>\n//     , document.getElementById('root'));\n\n// var h1 = document.createElement('h1'); // <h1>\n\n// // now we have to write text within created element.\n// h1.innerHTML = \"I am sayali!!\";\n\n// // now show the text in output\n// document.getElementById(\"root\").appendChild(h1);\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n",["48","49"],"C:\\Users\\ADMIN\\firstapp\\src\\reportWebVitals.js",[],"C:\\Users\\ADMIN\\firstapp\\src\\App.js",["50","51","52","53","54","55","56","57"],"import React, { useState } from 'react';\nimport IncDec from \"./IncDec\";\nimport \"../node_modules/bootstrap/dist/css/bootstrap.min.css\";\n// import Heading from './Heading.jsx';\n// import Parag from './Parag';\n// import OlList from './OlList';\n//import Wish from './Wish';\n\n// function App(){\n//  return(\n//   <React.Fragment>\n//   <Heading />\n//   <Parag />\n//   <OlList />\n//   <Heading />\n//   </React.Fragment>\n//  );\n// }\n\n// const App = () => {\n//   const state = useState(0);\n//   let [count, updatedCount] = state\n//   let incCount = () =>{\n//     updatedCount(count+1);\n//     console.log(count);\n//   };\n//   return(\n//     <React.Fragment>\n//     <h1>{count}</h1>\n//     <button onClick={incCount}>click me</button>\n//     </React.Fragment>\n//   );\n// }\n\n\n// const App = () =>{\n//   let date1 = new Date().toLocaleTimeString();\n//   let state = useState(date1);\n//   let [date, currTime] = state\n//  const localTime = () =>{\n//   let date1 = new Date().toLocaleTimeString();\n//       currTime(date1);\n//       console.log(date1);\n//  }\n//  setInterval(localTime,1000);\n//  return(\n//   <React.Fragment>\n//     <h1> {date}</h1>\n//     {setInterval}\n//   </React.Fragment>\n//  )\n// }\n\n\n\n// const App = () =>{\n\n//   let [fullName,setName] = useState(\n//   {\n//     fname:\"\",\n//     lastName:\"\",\n//     mail:\"\",\n//     phone:\"\"\n//   });\n  \n\n// const Callname = (event) =>{\n//   console.log(\"clicked\");\n//  const {name, value} = event.target;\n//     setName((prevalue)=>\n//     {\n//       return{\n//         ...prevalue,\n//         [name] : value\n//       }\n//     });\n\n// };\n\n// const Myname = (event) => {\n//   event.preventDefault();\n//  alert(\"Form submitted successfully 😃\");\n// }\n//   return(\n//     <React.Fragment>\n//     <form onSubmit={Myname}>\n//     <h1> Hello {fullName.fname} {fullName.lastName}</h1>\n//     <p>{fullName.mail} </p>\n//     <p>{fullName.phone}</p>\n//     <input type=\"text\" placeholder=\"Enter your name\"  onChange={Callname} value={fullName.fname} name=\"fname\"/> <br/><br/>\n//     <input type=\"text\" placeholder=\"Enter your last name\"  onChange={Callname} value={fullName.lastName} name=\"lastName\"/><br/><br/>\n//     <input type=\"text\" placeholder=\"Enter your mail\" onChange={Callname} value={fullName.mail} name=\"mail\"/> <br/><br/>\n//     <input type=\"number\" placeholder=\"Phone number\" onChange={Callname} value={fullName.phone} name=\"phone\"/> <br/><br/>\n//     <button type=\"submit\"> Submit </button>\n//     </form>\n//     </React.Fragment>\n//   )\n// }\n\n// function App(){\n//   return <Wish/>\n// }\n\n// function names(){\n//   let name = \"sayali k\";\n//   return name;\n// }\n\n// export default App;\n// export {names};\n// const heading = {\n//   textAlign: \"center\",\n//   textDecoration: \"solid\" ,\n//   color: \"brown\",\n//   fontFamily: \"'Langar', cursive\"\n// };\n\n// function App(){\n//   return <h1 style={heading}> Calculator  </h1>\n// }\n\n// function add(x, y){\n//   return (x+y)\n// }\n\n// function sub(x, y){\n//   return (x-y)\n// }\n\n// function mul(x, y){\n//   return (x*y)\n// }\n// function div(x, y){\n//   return (x/y).toFixed(2);\n// }\n\n// ZXCVBNM,./123export default App;\n// export {add, sub, mul, div};\n\nconst App = () =>{\n  return(\n    <React.Fragment>\n    <h1 className=\"text-capitalize text-center text-dark m-5\">Welcome to my gallery</h1>\n\n    <div className=\"container\">\n  <div className=\"row\">\n    <div className=\"col-sm\">\n    <div class=\"card\">\n    <img src=\"https://picsum.photos/200/301\" class=\"card-img-top\" alt=\"random image\" height=\"200px\" />\n    <div class=\"card-body\">\n      <h5 class=\"card-title\">Card title</h5>\n      <p class=\"card-text\">Some quick example text to build on the card title and make up the bulk of the card's content.</p>\n      <a href=\"#\" class=\"btn btn-primary\">Go somewhere</a>\n    </div>\n  </div>\n    </div>\n    <div className=\"col-sm\">\n    <div class=\"card\">\n    <img src=\"https://picsum.photos/201/301\" class=\"card-img-top\" alt=\"random image\" height=\"200px\"/>\n    <div class=\"card-body\">\n      <h5 class=\"card-title\">Card title</h5>\n      <p class=\"card-text\">Some quick example text to build on the card title and make up the bulk of the card's content.</p>\n      <a href=\"#\" class=\"btn btn-primary\">Go somewhere</a>\n    </div>\n  </div>\n    </div>\n    <div className=\"col-sm\">\n    <div class=\"card\">\n    <img src=\"https://picsum.photos/202/301\" class=\"card-img-top\" alt=\"random image\" height=\"200px\"/>\n    <div class=\"card-body\">\n      <h5 class=\"card-title\">Card title</h5>\n      <p class=\"card-text\">Some quick example text to build on the card title and make up the bulk of the card's content.</p>\n      <a href=\"#\" class=\"btn btn-primary\">Go somewhere</a>\n    </div>\n  </div>\n    </div>\n  </div>\n</div>\n</React.Fragment>\n  );\n}\n\nexport default App;","C:\\Users\\ADMIN\\firstapp\\src\\Heading.jsx",[],"C:\\Users\\ADMIN\\firstapp\\src\\Parag.jsx",[],"C:\\Users\\ADMIN\\firstapp\\src\\olList.jsx",[],"C:\\Users\\ADMIN\\firstapp\\src\\OlList.jsx",[],"C:\\Users\\ADMIN\\firstapp\\src\\Wish.jsx",[],["58","59"],"C:\\Users\\ADMIN\\firstapp\\src\\IncDec.jsx",["60","61"],"import React, { useState } from \"react\";\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\n// import Fab from '@material-ui/core/Fab';\r\n// import IconButton from '@material-ui/core/IconButton';\r\n//import { makeStyles } from '@material-ui/core/styles';\r\nimport Clock from 'react-digital-clock';\r\n\r\n// const useStyles = makeStyles((theme) => ({\r\n//     fab: {\r\n//       margin: theme.spacing(2),\r\n//     },\r\n//     absolute: {\r\n//       position: 'absolute',\r\n//       bottom: theme.spacing(2),\r\n//       right: theme.spacing(3),\r\n//     },\r\n//   }));\r\nconst IncDec = () =>{\r\n    let [increment, setIncrement] = useState(0);\r\n    // const classes = useStyles();\r\n    \r\nconst IncrementVal = (event) =>{\r\n    console.log(\"Incremented\");\r\n    setIncrement((increment +1));\r\n}\r\n\r\nconst DecrementVal = (event) =>{\r\n    console.log(\"Decremented\");\r\n    if(increment == 0){\r\n        alert(\"OOPS!! 🙁 you are on zero\");\r\n    }\r\n    else{\r\n    setIncrement((increment -1));\r\n    }\r\n}\r\n\r\n\r\n    return(\r\n        <React.Fragment>\r\n            <Clock style=\"color: red\"/>\r\n            <h1>{increment} </h1>\r\n            <div> \r\n               <button onClick={IncrementVal}> <Tooltip title=\"Add\" aria-label=\"add\">\r\n                 <AddIcon />\r\n              \r\n             </Tooltip>\r\n             </button> \r\n            \r\n            <button onClick={DecrementVal}> <Tooltip title=\"Delete\">\r\n           \r\n              <DeleteIcon />\r\n          </Tooltip>  \r\n          </button> \r\n         </div>\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default IncDec;",["62","63"],{"ruleId":"64","severity":1,"message":"65","line":5,"column":14,"nodeType":"66","messageId":"67","endLine":5,"endColumn":17},{"ruleId":"64","severity":1,"message":"68","line":5,"column":19,"nodeType":"66","messageId":"67","endLine":5,"endColumn":22},{"ruleId":"64","severity":1,"message":"69","line":5,"column":24,"nodeType":"66","messageId":"67","endLine":5,"endColumn":27},{"ruleId":"64","severity":1,"message":"70","line":5,"column":29,"nodeType":"66","messageId":"67","endLine":5,"endColumn":32},{"ruleId":"71","replacedBy":"72"},{"ruleId":"73","replacedBy":"74"},{"ruleId":"64","severity":1,"message":"75","line":1,"column":17,"nodeType":"66","messageId":"67","endLine":1,"endColumn":25},{"ruleId":"64","severity":1,"message":"76","line":2,"column":8,"nodeType":"66","messageId":"67","endLine":2,"endColumn":14},{"ruleId":"77","severity":1,"message":"78","line":149,"column":5,"nodeType":"79","endLine":149,"endColumn":103},{"ruleId":"80","severity":1,"message":"81","line":153,"column":7,"nodeType":"79","endLine":153,"endColumn":43},{"ruleId":"77","severity":1,"message":"78","line":159,"column":5,"nodeType":"79","endLine":159,"endColumn":102},{"ruleId":"80","severity":1,"message":"81","line":163,"column":7,"nodeType":"79","endLine":163,"endColumn":43},{"ruleId":"77","severity":1,"message":"78","line":169,"column":5,"nodeType":"79","endLine":169,"endColumn":102},{"ruleId":"80","severity":1,"message":"81","line":173,"column":7,"nodeType":"79","endLine":173,"endColumn":43},{"ruleId":"71","replacedBy":"82"},{"ruleId":"73","replacedBy":"83"},{"ruleId":"84","severity":1,"message":"85","line":31,"column":18,"nodeType":"86","messageId":"87","endLine":31,"endColumn":20},{"ruleId":"88","severity":1,"message":"89","line":42,"column":20,"nodeType":"90","endLine":42,"endColumn":38},{"ruleId":"71","replacedBy":"91"},{"ruleId":"73","replacedBy":"92"},"no-unused-vars","'add' is defined but never used.","Identifier","unusedVar","'sub' is defined but never used.","'mul' is defined but never used.","'div' is defined but never used.","no-native-reassign",["93"],"no-negated-in-lhs",["94"],"'useState' is defined but never used.","'IncDec' is defined but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md",["93"],["94"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react/style-prop-object","Style prop value must be an object","JSXAttribute",["93"],["94"],"no-global-assign","no-unsafe-negation"]